{"version":3,"sources":["components/Box.js","components/CompanyListItem.js","components/CompaniesList.js","screens/SelectCompany.js","components/BtnBack.js","screens/CompanyDetails.js","components/CandidateForm.js","screens/CandidateDetails.js","screens/AddCandidate.js","components/Header.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Box","children","title","className","CompanyListItem","id","name","to","COMPANIES_QUERY","gql","CompaniesList","useQuery","loading","error","data","style","color","message","companies","map","company","SelectCompany","BtnBack","history","useHistory","onClick","goBack","COMPANY_DETAILS_QUERY","CompanyDetails","useParams","variables","fetchPolicy","class","address","phone","country","level","hiring","candidates","candidate","CandidateForm","companyId","onSend","onDelete","useState","setName","email","setEmail","setAddress","age","setAge","available","setAvailable","htmlFor","type","value","readOnly","disabled","onChange","e","target","min","checked","CANDIDATE_DETAILS_QUERY","UPDATE_CANDIDATE_MUTATION","DELETE_CANDIDATE_MUTATION","CandidateDetails","useMutation","deleteCandidate","deleteData","refetchQueries","query","awaitRefetchQueries","updateCandidade","updateData","userData","parseInt","COMPANY_NAME_QUERY","ADD_CANDIDATE_MUTATION","AddCandidate","addCandidate","adddata","Header","Footer","client","ApolloClient","uri","cache","InMemoryCache","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5af3f1f7.chunk.js","sourcesContent":["import React from 'react';\n\nconst Box = ({ children, title }) => {\n  return (\n    <div className=\"bg-gray-800 p-8 m-10 rounded-xl shadow-xl w-5/12\">\n      <h1 className=\"title\">{title}</h1>\n      {children}\n    </div>\n  );\n}\n\nexport default Box;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst CompanyListItem = ({ id, name }) => {\n  return (\n    <Link to={`/company/${id}/${name}`}>\n      <li className=\"flex justify-center align-center py-2 my-2 border border-lime rounded-lg text-lime font-medium cursor-pointer hover:bg-lime hover:text-white\">\n        {name}\n      </li>\n    </Link>\n  );\n}\n\nexport default CompanyListItem;","import React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport CompanyListItem from './CompanyListItem';\n\nconst COMPANIES_QUERY = gql`\nquery getCompanies{\n  companies{\n    id\n    name\n  }\n}\n`;\n\nconst CompaniesList = () => {\n  const { loading, error, data } = useQuery(COMPANIES_QUERY);\n  if (loading) return <h1>Loading...</h1>;\n  if (error) return <h2 style={{ color: 'red' }}>{error.message}</h2>;\n\n  return (\n    <>\n      <h1 className=\"title\">Select Company</h1>\n      <ul>\n        {data.companies.map(company => {\n          return <CompanyListItem key={company.id} id={company.id} name={company.name} />\n        })}\n      </ul>\n    </>\n  );\n}\n\nexport default CompaniesList;","import React from 'react';\nimport Box from '../components/Box';\nimport CompaniesList from '../components/CompaniesList';\n\n\nconst SelectCompany = () => {\n  return (\n    <Box>\n      <CompaniesList />\n    </Box>\n  );\n}\n\nexport default SelectCompany;","import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nconst BtnBack = () => {\n  const history = useHistory();\n  return <Link to='#' onClick={() => history.goBack()}>[Go Back]</Link>\n}\n\nexport default BtnBack;","import React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { Link, useParams, useHistory } from 'react-router-dom';\nimport Box from '../components/Box';\nimport BtnBack from '../components/BtnBack';\n\nconst COMPANY_DETAILS_QUERY = gql`\n  query getCompany($id: Int!){\n    company(id: $id){\n      id\n      name\n      address\n      phone\n      country\n      level\n      hiring\n      candidates{\n        id\n        name\n      }\n    }\n  }\n  `;\n\nconst CompanyDetails = () => {\n  const history = useHistory();\n  const { id } = useParams();\n  const { loading, error, data } = useQuery(COMPANY_DETAILS_QUERY, {\n    variables: { id: +id },\n    fetchPolicy: \"no-cache\"\n  })\n\n  if (error) return <h2 style={{ color: 'red' }}>{error.message}</h2>;\n  if (loading) return <h1>Loading...</h1>;\n\n  return (\n    <Box title={`${data.company.name} Details`}>\n      <div class=\"button-row\">\n        <BtnBack />\n        <Link to={`/candidate/add/${data.company.id}`}>[Add Candidate]</Link>\n      </div>\n      <ul>\n        <li className=\"data-row\">\n          <span>Company ID: </span>\n          <span className=\"data\">{data.company.id}</span>\n        </li>\n        <li className=\"data-row\">\n          <span>Name: </span>\n          <span className=\"data\">{data.company.name}</span>\n        </li>\n        <li className=\"data-row\">\n          <span>Address: </span>\n          <span className=\"data\">{data.company.address}</span>\n        </li>\n        <li className=\"data-row\">\n          <span>Phone: </span>\n          <span className=\"data\">{data.company.phone}</span>\n        </li>\n        <li className=\"data-row\">\n          <span>Country: </span>\n          <span className=\"data\">{data.company.country}</span>\n        </li>\n        <li className=\"data-row\">\n          <span>Level: </span>\n          <span className=\"data\">{data.company.level}</span>\n        </li>\n        <li className=\"data-row\">\n          <span>Hiring: </span>\n          <span className=\"data\">{data.company.hiring ? 'Yes' : 'No'}</span>\n        </li>\n        <li className=\"data-row\"><span>Candidates: </span>\n          <ul>\n            {data.company.candidates.map(candidate => {\n              return (\n                <li\n                  class=\"flex justify-end cursor-pointer data\"\n                  key={candidate.id}>\n                  <Link to={`/candidate/${candidate.id}/${candidate.name}`}>{candidate.name}</Link>\n                </li>\n              );\n            })}\n          </ul>\n        </li>\n      </ul>\n    </Box>\n  );\n}\n\nexport default CompanyDetails;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst CandidateForm = ({ companyId, candidate, onSend, onDelete }) => {\n  const [name, setName] = useState(candidate ? candidate.name : '');\n  const [email, setEmail] = useState(candidate ? candidate.email : '');\n  const [address, setAddress] = useState(candidate ? candidate.address : '');\n  const [age, setAge] = useState(candidate ? candidate.age : 18);\n  const [available, setAvailable] = useState(candidate ? candidate.available : true);\n\n  const handleSend = () => {\n    const newUserData = { name, email, address, age, available }\n    onSend(newUserData);\n  }\n\n  return (\n    <div className=\"my-4\">\n      <div>\n        <div className=\"data-row\">\n          <label htmlFor=\"companyId\">Company ID</label>\n          <input type=\"text\" id=\"companyId\" value={companyId} readOnly disabled />\n        </div>\n        <div className=\"data-row\">\n          <label htmlFor=\"name\">Name</label>\n          <input className=\"input-enabled\" type=\"text\" id=\"name\" value={name} onChange={(e) => setName(e.target.value)} />\n        </div>\n        <div className=\"data-row\">\n          <label htmlFor=\"email\">Email</label>\n          <input className=\"input-enabled\" type=\"text\" id=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n        </div>\n        <div className=\"data-row\">\n          <label htmlFor=\"address\">Address</label>\n          <input className=\"input-enabled\" type=\"text\" id=\"address\" value={address} onChange={(e) => setAddress(e.target.value)} />\n        </div>\n        <div className=\"data-row\">\n          <label htmlFor=\"age\">Age</label>\n          <input className=\"input-enabled\" type=\"number\" id=\"age\" value={age} onChange={(e) => setAge(e.target.value)} min={18} />\n        </div>\n        <div className=\"flex px-2 my-2\">\n          <label htmlFor=\"available\">Available</label>\n          <div className=\"ml-2\">\n            <input type=\"checkbox\" id=\"available\" checked={available} onChange={() => setAvailable(!available)} />\n          </div>\n        </div>\n      </div>\n      <div className=\"flex justify-center\">\n        <Link to=\"#\" onClick={handleSend}>[Send]</Link>\n      </div>\n    </div>\n  );\n}\n\nexport default CandidateForm;","import React from 'react';\nimport { useMutation, useQuery, gql } from '@apollo/client';\nimport { Link, useParams, useHistory } from 'react-router-dom';\nimport Box from '../components/Box';\nimport CandidateForm from '../components/CandidateForm';\nimport BtnBack from '../components/BtnBack';\n\nconst CANDIDATE_DETAILS_QUERY = gql`\nquery getCandidate($id: Int!){\n  candidate(id: $id){\n    id\n    name\n    email\n    address\n    age\n    available\n    companyId\n    company{\n      name\n    }\n  }\n}\n`;\n\nconst UPDATE_CANDIDATE_MUTATION = gql`\nmutation updateCandidateData($id: Int!, $name: String!, $email: String!, $address: String!, $age: Int!, $available: Boolean!){\n  updateCandidate(id: $id, name: $name, email: $email, address: $address, age: $age, available: $available){\n    id\n  }\n}\n`;\n\nconst DELETE_CANDIDATE_MUTATION = gql`\n  mutation deleteCandidateById($id: Int!){\n    deleteCandidate(id:$id){\n        id\n    }\n  }\n`;\n\nconst CandidateDetails = () => {\n  const history = useHistory();\n  const { id } = useParams();\n  const { loading, error, data } = useQuery(CANDIDATE_DETAILS_QUERY, {\n    variables: { id: +id }\n  })\n  const [deleteCandidate, { deleteData }] = useMutation(DELETE_CANDIDATE_MUTATION);\n  const [updateCandidade, { updateData }] = useMutation(UPDATE_CANDIDATE_MUTATION, {\n    refetchQueries: [{ query: CANDIDATE_DETAILS_QUERY, variables: { id: +id } }],\n    awaitRefetchQueries: true\n  });\n\n  const handleCandidateUpdate = (userData) => {\n    updateCandidade({\n      variables: {\n        id: parseInt(id),\n        name: userData.name,\n        email: userData.email,\n        address: userData.address,\n        age: parseInt(userData.age),\n        available: userData.available,\n      }\n    });\n    history.goBack()\n\n  }\n\n  const handleCandidateDelete = () => {\n    deleteCandidate({ variables: { id: +id } });\n    history.goBack();\n  }\n\n  if (error) return <h2 style={{ color: 'red' }}>{error.message}</h2>;\n  if (loading) return <h1>Loading...</h1>;\n\n  return (\n    <Box title={`Candidate Details: ${data.candidate.name}`}>\n      <div className=\"button-row\">\n        <BtnBack />\n        <Link to='#' onClick={handleCandidateDelete}>[Delete Candidate]</Link>\n      </div>\n      <CandidateForm\n        companyId={data.candidate.companyId}\n        candidate={data.candidate}\n        onSend={handleCandidateUpdate}\n      />\n    </Box>\n  );\n}\n\nexport default CandidateDetails;","import React, { useState } from 'react';\nimport { useMutation, useQuery, gql } from '@apollo/client';\nimport { useParams, useHistory, Link } from 'react-router-dom';\nimport Box from '../components/Box';\nimport BtnBack from '../components/BtnBack';\nimport CandidateForm from '../components/CandidateForm';\n\nconst COMPANY_NAME_QUERY = gql`\nquery getCompany($id: Int!){\n  company(id: $id){\n    name\n  }\n}\n`;\n\nconst ADD_CANDIDATE_MUTATION = gql`\nmutation AddCandidate(\n  $name: String!,\n  $email: String!,\n  $address: String!,\n  $age: Int!,\n  $available: Boolean!,\n  $companyId: Int!\n){\n  addCandidate(\n    name: $name,\n    email: $email,\n    address: $address,\n    age: $age,\n    available: $available,\n    companyId: $companyId\n  ){\n    id\n  }\n}\n`;\n\nconst AddCandidate = () => {\n  const history = useHistory();\n  const { companyId } = useParams();\n  const { loading, error, data } = useQuery(COMPANY_NAME_QUERY, {\n    variables: { id: +companyId }\n  })\n  const [addCandidate, { adddata }] = useMutation(ADD_CANDIDATE_MUTATION);\n\n  const handleAddCandidate = (userData) => {\n    addCandidate({\n      variables: {\n        name: userData.name,\n        email: userData.email,\n        address: userData.address,\n        age: parseInt(userData.age),\n        available: userData.available,\n        companyId: parseInt(companyId)\n      }\n    });\n    history.goBack();\n  }\n\n  if (error) return <h2 style={{ color: 'red' }}>{error.message}</h2>;\n  if (loading) return <h1>Loading...</h1>;\n\n  return (\n    <Box title={`Add Candidate to ${data.company.name}`}>\n      <div className=\"button-row\">\n        <BtnBack />\n      </div>\n      <CandidateForm companyId={companyId} onSend={handleAddCandidate} />\n    </Box>\n\n  );\n}\n\nexport default AddCandidate;","import React from 'react';\n\nconst Header = () => {\n  return (\n    <div className=\"bg-lime text-black flex justify-center align-center py-2 shadow-xl w-full\">\n      <h1>Companies</h1>\n    </div>\n  );\n}\n\nexport default Header;","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <div className=\"bg-lime text-black flex justify-center align-center py-2 shadow-xl\">\n      <p class=\"text-sm italic\">Lorem Ipsum © A very important company</p>\n    </div>\n  );\n}\n\nexport default Footer;","import { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom';\nimport SelectCompany from './screens/SelectCompany';\nimport CompanyDetails from './screens/CompanyDetails';\nimport CandidateDetails from './screens/CandidateDetails';\nimport AddCandidate from './screens/AddCandidate';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport './styles/main.css';\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:5000/graphql',\n  cache: new InMemoryCache()\n})\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <Header />\n        <main className=\"flex justify-center\">\n          <Switch>\n            <Route path='/company/:id/:name' component={CompanyDetails} />\n            <Route path='/candidate/add/:companyId' component={AddCandidate} />\n            <Route path='/candidate/:id/:name' component={CandidateDetails} />\n            <Route exact path='/' component={SelectCompany} />\n          </Switch>\n        </main>\n        <Footer />\n      </Router>\n    </ApolloProvider >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}